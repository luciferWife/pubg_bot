import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# üîπ –ë–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
TOKEN = os.getenv("BOT_TOKEN")

# üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å .env –∏–ª–∏ Render Environment Variables.")

print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è... (–¢–æ–∫–µ–Ω: {TOKEN[:5]}...)")  # –í—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ–∫–µ–Ω–∞

# üîπ –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="Markdown"))
dp = Dispatcher()

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìú –ü—Ä–∞–≤–∏–ª–∞", callback_data="rules")],
        [InlineKeyboardButton(text="üéÆ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã", callback_data="register")],
        [InlineKeyboardButton(text="üì¢ –ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏", callback_data="socials")]
    ])
    return keyboard

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "üî• **–°–∞–ª–µ–º, –¥–æ—Å—Ç–∞—Ä! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–µ—Ä–≤—ã–π –≤ —Å–≤–æ–µ–º —Ä–æ–¥–µ –±–æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ PUBG Mobile !** üéÆ\n\n"
        "‚öîÔ∏è **–ì–æ—Ä—è—á–∏–µ –∫–∞—Å—Ç–æ–º–∫–∏ –∏ —Ç—É—Ä–Ω–∏—Ä—ã** –æ—Ç –∫–ª–∞–Ω–∞ **„ÄéJT„Äè Bloody Demons** –∏ **lucifer„Ç∑wife** —É–∂–µ –∂–¥—É—Ç —Å–≤–æ–∏—Ö –≥–µ—Ä–æ–µ–≤!\n\n"
        "üí° **–¢—ã –≥–æ—Ç–æ–≤ –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Å–∏–ª—å–Ω–µ–π—à–∏–π?** –ñ–º–∏ **/start** –∏ –≤–ø–∏—Å—ã–≤–∞–π —Å–≤–æ–µ –∏–º—è –≤ –∏—Å—Ç–æ—Ä–∏—é –±–æ—ë–≤! üíÄüî•",
        reply_markup=main_menu()
    )

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìú –ü—Ä–∞–≤–∏–ª–∞"
@dp.callback_query(lambda c: c.data == "rules")
async def rules_callback(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üìú **–í–æ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Ç—É—Ä–Ω–∏—Ä–∞:**\n"
        "1Ô∏è‚É£ **–°–æ–±–ª—é–¥–∞–π—Ç–µ —á–µ—Å—Ç–Ω—É—é –∏–≥—Ä—É** - –Ω–∏–∫–∞–∫–∏—Ö —á–∏—Ç–æ–≤ –∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º!\n"
        "2Ô∏è‚É£ **–ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ —Ç–æ–∫—Å–∏—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ**.\n"
        "3Ô∏è‚É£ **–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ**.\n\n"
        "‚ö†Ô∏è –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏!",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
    )
    await callback.answer()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üéÆ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã"
@dp.callback_query(lambda c: c.data == "register")
async def register_callback(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üéÆ **–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ —Ñ–æ—Ä–º–µ:**\n\n"
        "üèÜ *–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:* ...\n"
        "üë§ *–ò–≥—Ä–æ–∫ 1:* ...\n"
        "üë§ *–ò–≥—Ä–æ–∫ 2:* ...\n"
        "üë§ *–ò–≥—Ä–æ–∫ 3:* ...\n"
        "üë§ *–ò–≥—Ä–æ–∫ 4:* ...\n\n"
        "‚úÖ *–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!*",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
    )
    await callback.answer()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üì¢ –ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏"
@dp.callback_query(lambda c: c.data == "socials")
async def socials_callback(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì∑ TikTok —Å—Ç—Ä–∏–º—ã", url="https://www.tiktok.com/@lucifer__wife")],
        [InlineKeyboardButton(text="üì¢ Telegram –∫–∞–Ω–∞–ª", url="https://t.me/jtpubg")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ])
    await callback.message.edit_text("üì¢ **–ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏:**", reply_markup=keyboard)
    await callback.answer()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
@dp.callback_query(lambda c: c.data == "back_to_menu")
async def back_to_menu_callback(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üî• **–°–∞–ª–µ–º, –¥–æ—Å—Ç–∞—Ä! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–µ—Ä–≤—ã–π –≤ —Å–≤–æ–µ–º —Ä–æ–¥–µ –±–æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ PUBG Mobile KZ!** üéÆ\n\n"
        "‚öîÔ∏è **–ì–æ—Ä—è—á–∏–µ –∫–∞—Å—Ç–æ–º–∫–∏ –∏ —Ç—É—Ä–Ω–∏—Ä—ã** –æ—Ç –∫–ª–∞–Ω–∞ **„ÄéJT„Äè Bloody Demons** –∏ **lucifer„Ç∑wife** —É–∂–µ –∂–¥—É—Ç —Å–≤–æ–∏—Ö –≥–µ—Ä–æ–µ–≤!\n\n"
        "üí° **–¢—ã –≥–æ—Ç–æ–≤ –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Å–∏–ª—å–Ω–µ–π—à–∏–π?** –ñ–º–∏ **/start** –∏ –≤–ø–∏—Å—ã–≤–∞–π —Å–≤–æ–µ –∏–º—è –≤ –∏—Å—Ç–æ—Ä–∏—é –±–æ—ë–≤! üíÄüî•",
        reply_markup=main_menu()
    )
    await callback.answer()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@dp.message()
async def unknown_command(message: types.Message):
    await message.reply("‚ùå *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.* –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –º–µ–Ω—é.")

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
